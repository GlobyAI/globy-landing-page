@use '../../abstracts' as *;

.select-box {
  width: 100%;
  border: none;
  text-align: left;
  overflow: visible;
  .dropdown {
    margin: 0 auto;
    width: 100%;
    position: relative;
    display: inline-block;
    height: 4.2rem;
    @include breakpoint(lg) {
      height: 5.4rem;
    }
    p {
      font-weight: 500;
      margin-bottom: 0.8rem;
    }
    #dropdown {
      width: 100%;
    }

    &:focus {
      .dropdown-btn {
        border-color: $black;
      }
    }

    &__icon {
      position: absolute;
      top: 50%;
      left: 0.6rem;
      transform: translateY(-50%);
      @include flex(center, center);
      @include breakpoint(lg) {
        left: 1.6rem;
      }
    }
    #dropdown-btn {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      border: 0.2rem solid;
      overflow: hidden;
      height: 4.2rem;
      z-index: 0;
      cursor: pointer;
      padding: 1rem;
      padding-left: 3.2rem;
      background-color: $input-bg;
      border-color: transparent;
      border-radius: 0.6rem;
      &:not(:disabled):focus,
      &:not(:disabled):focus-within,
      &:not(:disabled):hover {
        border-color: $input-border-active;
      }
      @include text($text-secondary, 400, 1.2rem);
      @include flex(left, center);
      @include breakpoint(md) {
        font-size: 1.4rem;
      }
      @include breakpoint(lg) {
        font-size: 1.6rem;
      }

      @include breakpoint(lg) {
        border-radius: 1.2rem;
        padding: 1.6rem;
        padding-left: 5.6rem;
        height: 5.6rem;
      }
    }
    #overlay {
      position: fixed;
      display: none;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: transparent;
      z-index: 100;
    }
    #dropdown-content,
    .dropdown-content {
      display: none;
      position: absolute;
      border-bottom-left-radius: 4px;
      border-bottom-right-radius: 4px;
      top: 105%;
      left: 0;
      width: 100%;
      max-height: 40rem;
      z-index: 1000;
      overflow-y: auto;
      background-color: $white;
      justify-content: left;
      align-items: flex-start;
      flex-direction: column;
      gap: 1.2rem;
      &__search-bar {
        width: 100%;
        border-bottom: 0.05rem solid $gray-100;
        padding: 0.8rem 1.6rem;
        @include breakpoint(lg) {
          padding: 1.6rem;
        }
      }
      &::-webkit-scrollbar {
        opacity: 0;
        width: 0;
      }
      input {
        &::placeholder {
          color: $text-secondary;
          font-weight: 400;
          font-size: 1.4rem;
          @include breakpoint(lg) {
            font-size: 1.6rem;
          }
        }
      }
      ul {
        width: 100%;
        .item {
          width: 100%;
          padding: 0.8rem 1.6rem;
          text-align: left;
          cursor: pointer;
          @include text($text-secondary, 400, 1.2rem);
          @include breakpoint(md) {
            font-size: 1.4rem;
          }

          @include breakpoint(lg) {
            font-size: 1.6rem;
          }
          &:hover {
            background-color: $gray-100;
            font-weight: 500;
          }
        }
      }
    }
    // Using checkbox to toggle dropdown
    input[type='checkbox']:checked ~ #dropdown-content {
      display: flex;
    }
    input[type='checkbox']:checked ~ #dropdown-btn {
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
      color: $input-label-active;
    }

    input[type='checkbox']:checked ~ #overlay {
      display: block;
    }
    &-error {
      font-weight: 500;
      @include flex(left, center);
      svg {
        width: 1.2rem;
        height: 1.2rem;
        margin-right: 0.8rem;
      }
    }

    &-error {
      z-index: 0;
      position: relative;
    }
  }
  &.error {
    .dropdown-error {
      border-color: $input-border-error !important;
      @include text($input-error-message, 400, 1.2rem);
      @include breakpoint(lg) {
        font-size: 1.4rem;
      }
    }
    #dropdown-btn {
      border-color: $input-border-error !important;
      color: $input-error-message;
    }
  }
}
